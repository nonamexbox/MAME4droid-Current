name: Android Build

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Set up build environment
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential unzip python3 libsdl2-dev lua5.4
        sudo fallocate -l 4G /swapfile
        sudo chmod 600 /swapfile
        sudo mkswap /swapfile
        sudo swapon /swapfile
        free -m

    - name: Download MAME 0.279 source
      run: |
        wget https://github.com/mamedev/mame/archive/refs/tags/mame0279.zip
        unzip mame0279.zip
        mv mame-mame0279 mame-src

    - name: Prepare OSD layer
      run: |
        mkdir -p mame-src/src/osd
        cp -r ./src/osd/myosd mame-src/src/osd/

    - name: Apply essential patches
      run: |
        # 关键修复：禁用-e选项的错误退出行为
        set +e
        
        # 创建补丁文件
        cat > mame-src/patch.diff << 'EOF'
        diff --git a/scripts/genie.lua b/scripts/genie.lua
        --- a/scripts/genie.lua
        +++ b/scripts/genie.lua
        @@ -300,8 +300,11 @@
            -- common defines
            defines {
                "NO_USE_MIDI",
        -        "USE_QTDEBUG=0",
        +        "USE_QTDEBUG=0"
            }
        +    defines {
        +        "SDLMAME_ANDROID=1"
        +    }
            
            -- disable exceptions
        EOF
        
        # 应用补丁或手动修改
        cd mame-src
        patch -p1 < patch.diff
        if [ $? -eq 0 ]; then
            echo "补丁应用成功"
            # 添加额外的定义
            sed -i '/SDLMAME_ANDROID/a\        "__LIBRETRO__",\n        "LUA_COMPAT_ALL"' scripts/genie.lua
        else
            echo "补丁应用失败，手动添加所有定义"
            sed -i '/NO_USE_MIDI/a\        "SDLMAME_ANDROID=1",\n        "__LIBRETRO__",\n        "LUA_COMPAT_ALL"' scripts/genie.lua
        fi
        
        # 验证修改
        echo "修改后的genie.lua相关内容:"
        grep -A 10 "NO_USE_MIDI" scripts/genie.lua
        
        # 确保脚本成功退出
        true

    - name: Download Android NDK r21e
      run: |
        wget https://dl.google.com/android/repository/android-ndk-r21e-linux-x86_64.zip
        unzip android-ndk-r21e-linux-x86_64.zip
        echo "NDK_ROOT=$(pwd)/android-ndk-r21e" >> $GITHUB_ENV

    - name: Build libMAME4droid.so
      run: |
        cd mame-src
        export ANDROID_NDK_ROOT=${{ env.NDK_ROOT }}
        make OSD=myosd TARGETOS=android NOWERROR=1 \
          CROSS_BUILD=1 TOOLS=0 REGENIE=1 \
          ARCHOPTS="-Wl,-soname,libMAME4droid.so -D__ANDROID__" \
          TARGET=mame SUBTARGET=arcade \
          ANDROID_ARCH=arm64 \
          -j2
        
        mkdir -p ../app/src/main/jniLibs/arm64-v8a
        cp mamearcade64 ../app/src/main/jniLibs/arm64-v8a/libMAME4droid.so

    - name: Build Android APK
      run: |
        chmod +x gradlew
        ./gradlew assembleDebug --no-daemon --stacktrace

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: MAME4droid-APK
        path: app/build/outputs/apk/debug/*.apk
        retention-days: 7

    - name: Upload build logs (on failure)
      if: ${{ failure() }}
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: |
          mame-src/compile.log
          app/build/**/logs/*.log
